``matrix_divided`` module

This module defines a function that takes a matrix of lists and
divides them by a given integer or float.

``Using matrix_divided``

``matirx_divded(matrix, div)`` Iterates over the 2d matrix and
returns a new matrix of the values rounded to two decimal places.

Import Module:
       >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing:

Function checks to see if the values passed are list of lists containing
only integers or floats.

     >>> matrix_divided([[3, 3, 3],[6, 6, 6]], 3)
     [[1.0, 1.0, 1.0], [2.0, 2.0, 2.0]]

    >>> matrix_divided([[0.33, 0.66, 0.99], [-98, -65, -32]], 12)
    [[0.03, 0.06, 0.08], [-8.17, -5.42, -2.67]]

    >>> matrix_divided([[1000, 9992, 109.92], [123, -128, -47]], -98)
    [[-10.2, -101.96, -1.12], [-1.26, 1.31, 0.48]]

Function raises TypeError if div is not of type int/float.

	 >>> matrix_divided([[3, 3, 3],[6, 6, 6]], "Hello")
	 Traceback (most recent call last):
	 ...
	 TypeError: div must be a number

	 >>> matrix_divided([[3, 3, 3],[6, 6, 6]], [1])
	 Traceback (most recent call last):
	 ...
	 TypeError: div must be a number

Function raise ZeroDivisionError if div is 0.

	 >>> matrix_divided([[3, 3, 3],[6, 6, 6]], 0)
	 Traceback (most recent call last):
	 ...
	 ZeroDivisionError: division by zero

Function raises a TypeError if the matrix is not a list of list, containing
only integers or floats.

	 >>> matrix_divided({"Hello": 1, "World": 3}, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([["Hello", "World"], ["foo", "bar"]], 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats


Function raises TypeError if the matrices inside are not of same length or
lenght of 0

	 >>> matrix_divided([[],[]], 12)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix must be a matrix (list of lists) of integers/floats

	 >>> matrix_divided([[1, 2, 3],[1, 2]], 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: Each row of the matrix must have the same size

Function raises type Error if parameters are missing from input.

	 >>> matrix_divided([[3, 3, 3],[6, 6, 6]], )
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() missing 1 required positional argument: 'div'
	 >>> matrix_divided()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Speical case when dividing by float('inf')

	>>> matrix_divided([[3, 3, 3],[6, 6, 6]], float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
