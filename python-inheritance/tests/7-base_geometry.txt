``BaseGeometry`` module

This module contains the constructor for the BaseGeometry
class.

``Using BaseGeometry``

``var_name = BaseGeometry`` The constructor will create a new
instance of the class in the var_name.

``var_name.integer_validator(name, value)`` Will check the value passed through
is an integer and greater than 0.

Import Module:
       >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Good values passed through:

     >>> my_obj = BaseGeometry()
     >>> my_obj.integer_validator('string', 2)
     >>> my_obj.integer_validator('string', 12)

Check area method works:

      >>> my_obj.area()
      Traceback (most recent call last):
      ...
      Exception: area() is not implemented

Bad integers passed through:

    >>> my_obj.integer_validator('string', 0)
    Traceback (most recent call last):
    ...
    ValueError: string must be greater than 0

    >>> my_obj.integer_validator('string', -1)
    Traceback (most recent call last):
    ...
    ValueError: string must be greater than 0

Non integers passed through:
    >>> my_obj.integer_validator('string', "Hellow")
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', 1.0)
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', [1])
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', None)
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', True)
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', (1,))
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

    >>> my_obj.integer_validator('string', {1, 3})
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

One parameter passed through:

    >>> my_obj.integer_validator('string')
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
