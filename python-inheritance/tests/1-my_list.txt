The ``1-my_list`` module
========================

Using ``MyList``
-----------------

Importing function from module:
	>>> MyList = __import__("1-my_list").MyList

Checking for module documentation:
	 >>> mod = __import__("1-my_list").__doc__
	 >>> len(mod) > 1
	 True

Checking for class documentation:
	 >>> func = __import__("1-my_list").MyList.__doc__
	 >>> len(func) > 1
	 True

Checking for method documentation:
	 >>> mtd = __import__("1-my_list").MyList.print_sorted.__doc__
	 >>> len(mtd) > 1
	 True

Checking empty list:
	 >>> my_list = MyList()
	 >>> my_list.print_sorted()
	 []

Checking that appendng works:
	 >>> my_list.append(1)
	 >>> my_list.append(3)
	 >>> my_list.append(2)
	 >>> print(my_list)
	 [1, 3, 2]

Checking that sorting works:
	 >>> my_list.print_sorted()
	 [1, 2, 3]

Checking for one negative number:
	 >>> my_list.append(-8)
	 >>> print(my_list)
	 [1, 3, 2, -8]
	 >>> my_list.print_sorted()
	 [-8, 1, 2, 3]

Checking for all negative numbers:
	 >>> my_list = MyList()
	 >>> my_list.append(-2)
	 >>> my_list.append(-3)
	 >>> my_list.append(-4)
	 >>> print(my_list)
	 [-2, -3, -4]
	 >>> my_list.print_sorted()
	 [-4, -3, -2]

Checking for handling of too many arguments:
	 >>> my_list.print_sorted(8)
	 Traceback (most recent call last):
	 ...
	 TypeError: print_sorted() takes 1 positional argument but 2 were given
